@use 'sass:map';

@function step-define-inputs-config(
  $primary-color: #0082cb,
  $primary-text-color: #293e50,
  $border-color: #d0d5dd,
  $error-color: #ff0000
) {
  $config: (
    primary-color: $primary-color,
    primary-text-color: $primary-text-color,
    border-color: $border-color,
    error-color: $error-color,
  );

  @return $config;
}

@mixin suffix-prefix($selectors...) {
  $mat-form-field-container: '.mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix';

  @for $i from 0 to length($selectors) {
    $selector: nth($selectors, $i + 1);

    &.with-suffix {
      #{$mat-form-field-container} #{$selector} {
        border-right: 0;
        border-radius: 8px 0 0 8px;
      }
    }

    &.with-prefix {
      #{$mat-form-field-container} #{$selector} {
        border-left: 0;
        border-radius: 0 8px 8px 0;
      }
    }

    &.with-prefix.with-suffix {
      #{$mat-form-field-container} #{$selector} {
        border-radius: 0;
        border-left: 0;
        border-right: 0;
      }
    }
  }
}

@mixin mat-form-field($config) {
  $primary-color: map.get($config, primary-color);
  $primary-text-color: map.get($config, primary-text-color);
  $border-color: map.get($config, border-color);
  $error-color: map.get($config, error-color);

  mat-form-field.step-view {
    display: block;
    line-height: 1;

    .mat-form-field-wrapper {
      display: flex;
      padding-bottom: 0;

      .mat-form-field-flex {
        align-items: flex-end;

        .mat-form-field-infix {
          padding: 0;
          border-top: none;
          display: flex;
          flex-direction: column-reverse;

          mat-select,
          mat-radio-group,
          .mat-input-element {
            border: 1px solid $border-color;
            border-radius: 8px;
            font-weight: 400;
            padding: 10px 14px;
            line-height: 20px;
            margin-top: 0;
            margin-bottom: 0;
            box-sizing: border-box;

            .mat-select-trigger {
              height: auto;
            }

            &.border-primary {
              border: 1px solid $primary-color;
            }
          }

          mat-radio-group {
            line-height: 18px;
            display: flex;
            gap: 1rem;
          }

          .mat-form-field-label-wrapper {
            padding-top: 0;
            display: flex;
            height: auto;
            pointer-events: all;
            left: 0;
            right: 0;
            top: 0;

            label {
              position: static;
              color: $primary-text-color;
              font-weight: 500;
              font-size: 14px;
              line-height: 20px;
              width: 100% !important;
              transform: none !important;
              pointer-events: all;
              padding-bottom: 0;

              mat-label {
                display: inline-flex;
                align-items: center;
                gap: 4px;

                step-icon {
                  width: 16px;
                  height: 16px;
                  min-width: 16px;
                  min-height: 16px;
                }
              }
            }
          }
        }

        .mat-form-field-prefix {
          height: 42px;
          min-width: 180px;
          padding: 0 12px;
          display: flex;
          border: 1px solid $border-color;
          border-radius: 8px 0 0 8px;
          align-items: center;
        }

        .mat-form-field-suffix {
          height: 42px;
          display: flex;
          border: 1px solid $border-color;
          border-radius: 0 8px 8px 0;

          .icon-suffix {
            display: flex;
            align-items: center;
            padding: 0 8px;
          }

          .mat-flat-button,
          .mat-stroked-button {
            border: 0;
            border-radius: 0;
            padding: 0 8px;
            min-width: auto;
            line-height: 26px;

            &:last-child {
              border-radius: 0 8px 8px 0;
            }
          }

          .suffix-separator {
            height: 100%;
            border-right: 1px solid $border-color;
          }
        }
      }

      .mat-form-field-underline {
        display: none;
      }
    }

    &.mat-form-field-has-label {
      .mat-form-field-flex {
        padding-top: 22px;
        position: relative;

        .mat-form-field-infix {
          position: static;
          gap: 4px;
        }
      }
    }

    @include suffix-prefix('.mat-input-element', 'mat-select', 'mat-radio-group');

    &.with-padding {
      .mat-form-field-wrapper {
        padding-bottom: 20px;
      }
    }

    &.with-reduced-inner-padding {
      .mat-form-field-wrapper .mat-form-field-flex {
        .mat-form-field-infix {
          mat-select,
          .mat-input-element {
            padding: 8px 14px;
            line-height: 18px;
          }
        }

        .mat-form-field-suffix {
          height: 36px;
        }
      }
    }

    &.step-force-focus,
    &.mat-focused {
      .mat-form-field-wrapper .mat-form-field-flex {
        .mat-form-field-infix {
          mat-select,
          mat-radio-group,
          .mat-input-element {
            border-color: $primary-color;
          }

          .mat-form-field-label-wrapper label {
            color: $primary-color;
          }
        }

        .mat-form-field-prefix,
        .mat-form-field-suffix {
          color: $primary-color;
          border: 1px solid $primary-color;

          .mat-stroked-button:not([color]):not([disabled]) {
            color: $primary-text-color;
          }

          .suffix-separator {
            border-right: 1px solid $primary-color;
          }
        }
      }
    }

    &.ng-invalid.ng-touched {
      .mat-form-field-wrapper .mat-form-field-flex {
        .mat-form-field-infix {
          mat-select,
          .mat-input-element {
            border-color: $error-color;
          }

          .mat-form-field-label-wrapper label {
            color: $error-color;
          }
        }

        .mat-form-field-prefix {
          color: $error-color;
          border: 1px solid $error-color;
        }

        .mat-form-field-suffix {
          color: $error-color;
          border: 1px solid $error-color;

          .mat-stroked-button:not([color]):not([disabled]) {
            color: $primary-text-color;
          }

          .suffix-separator {
            border-right: 1px solid $error-color;
          }
        }
      }
    }
  }

  th {
    mat-form-field.step-view {
      .mat-form-field-wrapper .mat-form-field-flex {
        .mat-form-field-infix {
          mat-select,
          .mat-input-element {
            padding: 8px 14px;
            line-height: 18px;
          }
        }

        .mat-form-field-suffix {
          height: 36px;
        }
      }
    }
  }
}

@mixin inputs($config: null) {
  @if not $config {
    $config: step-define-inputs-config();
  }

  @include mat-form-field($config);
}
