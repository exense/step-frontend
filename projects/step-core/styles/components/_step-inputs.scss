@use 'sass:map';
@use '../core-variables' as var;

@function step-define-inputs-config(
  $primary-color: #0082cb,
  $primary-text-color: #293e50,
  $border-color: #d0d5dd,
  $error-color: #ff0000
) {
  $config: (
    primary-color: $primary-color,
    primary-text-color: $primary-text-color,
    border-color: $border-color,
    error-color: $error-color,
  );

  @return $config;
}

$border-radius: 8px;

@mixin border-base {
  border-top-style: solid;
  border-bottom-style: solid;
  border-top-width: 1px;
  border-bottom-width: 1px;
}

@mixin left-border {
  border-left-width: 1px;
  border-left-style: solid;
}

@mixin left-border-round {
  border-top-left-radius: $border-radius;
  border-bottom-left-radius: $border-radius;
}

@mixin right-border {
  border-right-width: 1px;
  border-right-style: solid;
}

@mixin right-border-round {
  border-top-right-radius: $border-radius;
  border-bottom-right-radius: $border-radius;
}

@mixin step-form-field($config) {
  $primary-color: map.get($config, primary-color);
  $primary-text-color: map.get($config, primary-text-color);
  $border-color: map.get($config, border-color);
  $error-color: map.get($config, error-color);

  step-label {
    &[show-required-marker]::after {
      content: '*';
      display: inline-block;
      margin-left: 0.4rem;
    }
  }

  step-form-field {
    display: flex;
    flex-direction: column;
    line-height: 1;
    gap: 0.4rem;

    mat-select,
    mat-radio-group,
    mat-date-range-input,
    .step-checkbox-container,
    input,
    pre,
    step-array-input,
    textarea {
      border-color: $border-color;
      font-weight: 400;
      padding: 8px 14px;
      line-height: 18px;
      margin-top: 0;
      margin-bottom: 0;
      box-sizing: border-box;
      outline: none;
    }

    mat-radio-group {
      padding: 7px 14px 4px 14px;
      display: flex;
      gap: 1rem;
    }

    mat-date-range-input .mat-date-range-input-container input {
      padding: 0;
    }

    & > .label-container {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      gap: 0.5rem;

      &.without-children {
        display: none;
      }

      & > .label-addon:empty {
        display: none;
      }

      & > .required-marker-container {
        flex-grow: 1;
        font-size: 1.2rem;
        line-height: 0.2rem;
        font-weight: 800;
        letter-spacing: 0.07rem;
        color: var.$muted;
        padding-left: 0.5rem;
        padding-top: 0.1rem;
        user-select: none;
      }

      &:not(.show-required-marker) > .required-marker-container > span {
        display: none;
      }

      &.align-left {
        & > .label-addon {
          order: 1;
        }
        & > .required-marker-container {
          order: 2;
        }
      }

      & > label {
        color: $primary-text-color;
        font-weight: 500;
        font-size: 14px;
        line-height: 20px;
        pointer-events: all;
        padding-bottom: 0;
      }
    }

    &:focus-within,
    &.step-force-focus {
      &:not(.no-label-focus) > .label-container > label {
        color: $primary-color;
        step-label {
          &[show-required-marker]::after {
            color: $error-color;
          }
        }
      }
      & > .form-field-content {
        mat-select,
        mat-radio-group,
        mat-date-range-input,
        .step-checkbox-container,
        input,
        pre,
        step-array-input,
        textarea,
        & > step-suffix,
        & > step-prefix {
          border-color: $primary-color;
        }

        & > step-suffix.icon-suffix,
        & > step-prefix.icon-prefix {
          step-icon {
            color: $primary-color;
          }
        }
      }
    }

    &.ng-invalid.ng-touched {
      mat-select,
      input,
      pre,
      step-array-input,
      mat-date-range-input,
      textarea {
        border-color: $error-color;
      }

      & > .label-container {
        & > label,
        & > .required-marker-container {
          color: $error-color;
        }
      }

      & > .form-field-content {
        & > step-suffix,
        & > step-prefix {
          border-color: $error-color;
        }
        & > step-suffix.icon-suffix,
        & > step-prefix.icon-prefix {
          step-icon {
            color: $error-color;
          }
        }
      }
    }

    .form-field-content {
      display: inline-flex;
      width: 100%;

      & > mat-select,
      & > mat-radio-group,
      & > mat-date-range-input,
      & > .step-checkbox-container,
      & > input,
      pre,
      step-array-input,
      textarea {
        @include border-base;
        @include right-border;
        @include left-border;
        width: 130px;
        flex: auto;
      }

      & > input:not(:first-child) {
        border-left: none;
      }

      & > *:first-child {
        @include left-border-round;
      }
      & > *:last-child {
        @include right-border-round;
      }

      step-prefix,
      step-suffix {
        @include border-base;
        border-color: $border-color;
        border-radius: 0;
        display: flex;
        align-items: center;
        max-width: 200px;
        padding: 0 12px;
      }

      step-prefix {
        border-right: none;
        @include left-border;
      }
      step-suffix {
        border-left: none;
        @include right-border;
      }

      step-suffix.icon-suffix,
      step-prefix.icon-prefix {
        padding: 0 8px;
      }

      step-suffix.button-suffix,
      step-prefix.button-prefix {
        padding: 0;
        & > button,
        & > a {
          border: none;
          padding: 0 8px;
          min-width: auto;
          border-radius: 0;
          height: 100%;
          step-icon {
            display: flex;
          }
        }
      }

      step-prefix.button-prefix:first-child {
        & > button,
        & > a {
          @include left-border-round;
        }
      }
      step-suffix.button-suffix:last-child {
        & > button,
        & > a {
          @include right-border-round;
        }
      }
    }

    .form-field-error,
    .form-field-hint {
      font-size: 1.2rem;

      &:empty {
        display: none;
      }
    }

    .form-field-error {
      color: $error-color;
    }

    .form-field-error:not(:empty) + .form-field-hint {
      display: none;
    }
  }
}

@mixin step-form-field-vertical-layout {
  step-form-field:not(:last-child) {
    padding-bottom: 20px;
  }
}

@mixin inputs($config: null) {
  @if not $config {
    $config: step-define-inputs-config();
  }

  @include step-form-field($config);
}
