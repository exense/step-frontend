@use 'projects/step-core/styles/core-variables' as var;

step-table {
  height: 100%;
  display: flex;
  flex-direction: column;

  .table-container {
    flex: 1;
    overflow: auto;
    display: block;

    table {
      width: 100%;
      border-collapse: separate;

      thead tr {
        &:nth-child(1) {
          top: 0;
        }

        &:nth-child(2) {
          top: 48px;
        }
      }
    }
  }

  [mat-sort-header].cdk-keyboard-focused .mat-mdc-sort-header-container,
  [mat-sort-header].cdk-program-focused .mat-mdc-sort-header-container {
    border-bottom: none;
  }

  ::ng-deep .mat-mdc-form-field-infix {
    width: auto !important;
  }

  .spinner-container {
    position: absolute;
    z-index: 2;
    width: 100px;
    height: 100px;
    left: calc(50% - 50px);
    top: calc(50% - 50px);
  }

  .additional-header {
    padding: 0 24px;
  }

  .additional-header-flex {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
  }

  .no-data {
    text-align: center;
    height: 4.8rem;
  }

  .paginator-container {
    display: flex;
    align-items: center;
    justify-content: flex-end;
  }

  tr {
    ::ng-deep step-btn-group {
      opacity: 0.5;
    }

    &:hover ::ng-deep step-btn-group {
      opacity: 1;
    }
  }

  &.use-skeleton-placeholder {
    .table-container table > tbody {
      & > tr.no-data-row > td,
      & > tr.content-row > td {
        position: relative;

        &::after {
          content: ' ';
          display: block;
          position: absolute;
          margin: 1.5rem 0.8rem;
          border-radius: 0.5rem;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background: var.$gray-50;
        }

        &::before {
          content: ' ';
          display: block;
          position: absolute;
          margin: 1.5rem 0.8rem;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          border-radius: 0.5rem;
          background: linear-gradient(
            90deg,
            rgba(var.$black, 0) 0%,
            rgba(var.$black, 0.2) 50%,
            rgba(var.$black, 0) 100%
          );
          background-size: 200% 100%;
          background-position: 100% 50%;
          z-index: 1;
          animation: skeleton-progress 1.5s infinite;
        }

        & > * {
          opacity: 0;
        }
      }
    }

    &:not(.in-progress) .table-container table > tbody {
      & > tr.no-data-row > td,
      & > tr.content-row > td {
        &::after {
          animation: skeleton-opacity 0.5s ease-out;
          opacity: 0;
          visibility: hidden;
        }

        &:before {
          animation:
            skeleton-progress 1.5s infinite,
            skeleton-opacity 0.5s ease-out;
          opacity: 0;
          visibility: hidden;
        }
        & > * {
          opacity: 1;
          animation: content-fade-out 0.8s ease-out;
        }
      }
    }
  }
}

@media print {
  step-table {
    .table-container {
      overflow: hidden;
    }
  }
}

@keyframes skeleton-progress {
  to {
    background-position: -100% 50%;
  }
}

@keyframes skeleton-opacity {
  0% {
    opacity: 1;
    visibility: visible;
  }
  99% {
    opacity: 0;
    visibility: visible;
  }
  100% {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes content-fade-out {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
